// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component Disabled variants should render disabled button component contained 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={true}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "backgroundColor": "#bbbbbb",
        "borderRadius": 4,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
      },
    ]
  }
  testID="button"
  type="contained"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#333333",
            "fontWeight": "500",
            "lineHeight": 21,
          },
        ]
      }
      testID="button-label"
      textColor="highEmphasis"
    >
      LABEL BUTTON
    </Text>
  </View>
</View>
`;

exports[`Button component Disabled variants should render disabled button component outlined 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={true}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "borderColor": "#777777",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
      },
    ]
  }
  testID="button"
  type="outlined"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#777777",
            "fontWeight": "500",
            "lineHeight": 21,
          },
        ]
      }
      testID="button-label"
      textColor="mediumEmphasis"
    >
      LABEL BUTTON
    </Text>
  </View>
</View>
`;

exports[`Button component Disabled variants should render disabled button component text 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={true}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "borderRadius": 4,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
      },
    ]
  }
  testID="button"
  type="text"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#777777",
            "fontWeight": "500",
            "lineHeight": 21,
          },
        ]
      }
      testID="button-label"
      textColor="mediumEmphasis"
    >
      LABEL BUTTON
    </Text>
  </View>
</View>
`;

exports[`Button component Variants should render button component contained 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "backgroundColor": "#f4ab34",
        "borderRadius": 4,
        "elevation": 2,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
        "shadowColor": "#000000",
        "shadowOpacity": 0.14,
        "shadowRadius": 2,
      },
    ]
  }
  testID="button"
  type="contained"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#333333",
            "fontWeight": "500",
            "lineHeight": 21,
          },
        ]
      }
      testID="button-label"
      textColor="onPrimary"
    >
      LABEL BUTTON
    </Text>
  </View>
</View>
`;

exports[`Button component Variants should render button component outlined 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "borderColor": "#f4ab34",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
      },
    ]
  }
  testID="button"
  type="outlined"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#333333",
            "fontWeight": "500",
            "lineHeight": 21,
          },
        ]
      }
      testID="button-label"
      textColor="highEmphasis"
    >
      LABEL BUTTON
    </Text>
  </View>
</View>
`;

exports[`Button component Variants should render button component text 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "borderRadius": 4,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
      },
    ]
  }
  testID="button"
  type="text"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#333333",
            "fontWeight": "500",
            "lineHeight": 21,
          },
        ]
      }
      testID="button-label"
      textColor="highEmphasis"
    >
      LABEL BUTTON
    </Text>
  </View>
</View>
`;

exports[`Button component with Icon should render the icon to the left 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "backgroundColor": "#f4ab34",
        "borderRadius": 4,
        "elevation": 2,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
        "shadowColor": "#000000",
        "shadowOpacity": 0.14,
        "shadowRadius": 2,
      },
    ]
  }
  testID="button"
  type="contained"
>
  <View
    iconPosition="left"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      iconName="outlined-default-mockup"
      iconPosition="left"
      style={
        Array [
          Object {
            "color": "#333333",
            "fontWeight": "500",
            "lineHeight": 21,
            "marginStart": 8,
          },
        ]
      }
      testID="button-label"
      textColor="onPrimary"
    >
      LABEL BUTTON
    </Text>
    <Text
      accessibilityRole="text"
      style={
        Object {
          "color": "#333333",
          "fontFamily": "natds-icons",
          "fontSize": 16,
        }
      }
      testID="icon-outlined-default-mockup"
    >
      îª–
    </Text>
  </View>
</View>
`;

exports[`Button component with Icon should render the icon to the right by default 1`] = `
<View
  accessibilityRole="button"
  accessible={true}
  disabled={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  size="medium"
  style={
    Array [
      Object {
        "alignContent": "center",
        "alignItems": "center",
        "backgroundColor": "#f4ab34",
        "borderRadius": 4,
        "elevation": 2,
        "justifyContent": "center",
        "minHeight": 40,
        "paddingHorizontal": 8,
        "shadowColor": "#000000",
        "shadowOpacity": 0.14,
        "shadowRadius": 2,
      },
    ]
  }
  testID="button"
  type="contained"
>
  <View
    iconPosition="right"
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        },
      ]
    }
  >
    <Text
      iconName="outlined-default-mockup"
      iconPosition="right"
      style={
        Array [
          Object {
            "color": "#333333",
            "fontWeight": "500",
            "lineHeight": 21,
            "marginEnd": 8,
          },
        ]
      }
      testID="button-label"
      textColor="onPrimary"
    >
      LABEL BUTTON
    </Text>
    <Text
      accessibilityRole="text"
      style={
        Object {
          "color": "#333333",
          "fontFamily": "natds-icons",
          "fontSize": 16,
        }
      }
      testID="icon-outlined-default-mockup"
    >
      îª–
    </Text>
  </View>
</View>
`;
