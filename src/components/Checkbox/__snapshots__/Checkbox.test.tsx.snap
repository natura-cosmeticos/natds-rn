// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox component render should render checkbox correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={false}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessible={true}
    color="primary"
    disabled={false}
    focusable={true}
    onClick={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size={20}
  >
    <View
      color="primary"
      disabled={false}
      selected={false}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#777777",
            "borderRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
      testID="checkbox-box"
    />
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox disabled correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={true}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessible={true}
    color="primary"
    disabled={true}
    focusable={true}
    onClick={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size={20}
  >
    <View
      color="primary"
      disabled={true}
      selected={false}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#bbbbbb",
            "borderRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
      testID="checkbox-box"
    />
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox indeterminate selected but disabled correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={true}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessible={true}
    color="primary"
    disabled={true}
    focusable={true}
    onClick={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size={20}
  >
    <View
      color="primary"
      disabled={true}
      selected={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#bbbbbb",
            "borderColor": "#bbbbbb",
            "borderRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
      testID="checkbox-box"
    >
      <Text
        accessibilityRole="image"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "natds-icons",
            "fontSize": 16,
          }
        }
        testID="natds-icon"
      >
        
      </Text>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox indeterminate selected correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={false}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessible={true}
    color="primary"
    disabled={false}
    focusable={true}
    onClick={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size={20}
  >
    <View
      color="primary"
      disabled={false}
      selected={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#f4ab34",
            "borderColor": "#f4ab34",
            "borderRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
      testID="checkbox-box"
    >
      <Text
        accessibilityRole="image"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "natds-icons",
            "fontSize": 16,
          }
        }
        testID="natds-icon"
      >
        
      </Text>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox selected but disabled correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={true}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessible={true}
    color="primary"
    disabled={true}
    focusable={true}
    onClick={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size={20}
  >
    <View
      color="primary"
      disabled={true}
      selected={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#bbbbbb",
            "borderColor": "#bbbbbb",
            "borderRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
      testID="checkbox-box"
    >
      <Text
        accessibilityRole="image"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "natds-icons",
            "fontSize": 16,
          }
        }
        testID="natds-icon"
      >
        
      </Text>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox selected correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={false}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessible={true}
    color="primary"
    disabled={false}
    focusable={true}
    onClick={[Function]}
    onPress={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    size={20}
  >
    <View
      color="primary"
      disabled={false}
      selected={true}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#f4ab34",
            "borderColor": "#f4ab34",
            "borderRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
      testID="checkbox-box"
    >
      <Text
        accessibilityRole="image"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "natds-icons",
            "fontSize": 16,
          }
        }
        testID="natds-icon"
      >
        
      </Text>
    </View>
  </View>
</TouchableOpacity>
`;
