// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox component render should render checkbox correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={false}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 50,
      }
    }
    testID="touchable-ripple"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        color="primary"
        disabled={false}
        selected={false}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#777777",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            },
          ]
        }
        testID="checkbox-box"
      />
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox disabled correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={true}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 50,
      }
    }
    testID="touchable-ripple"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        color="primary"
        disabled={true}
        selected={false}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#bbbbbb",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            },
          ]
        }
        testID="checkbox-box"
      />
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox indeterminate selected but disabled correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={true}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 50,
      }
    }
    testID="touchable-ripple"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        color="primary"
        disabled={true}
        selected={true}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#bbbbbb",
              "borderColor": "#bbbbbb",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            },
          ]
        }
        testID="checkbox-box"
      >
        <Text
          accessibilityRole="image"
          color="surface"
          size="small"
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "natds-icons",
                "fontSize": 16,
              },
            ]
          }
          testID="natds-icon"
        >
          
        </Text>
      </View>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox indeterminate selected correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={false}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 50,
      }
    }
    testID="touchable-ripple"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        color="primary"
        disabled={false}
        selected={true}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f4ab34",
              "borderColor": "#f4ab34",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            },
          ]
        }
        testID="checkbox-box"
      >
        <Text
          accessibilityRole="image"
          color="surface"
          size="small"
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "natds-icons",
                "fontSize": 16,
              },
            ]
          }
          testID="natds-icon"
        >
          
        </Text>
      </View>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox selected but disabled correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={true}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessibilityState={
      Object {
        "disabled": true,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 50,
      }
    }
    testID="touchable-ripple"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        color="primary"
        disabled={true}
        selected={true}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#bbbbbb",
              "borderColor": "#bbbbbb",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            },
          ]
        }
        testID="checkbox-box"
      >
        <Text
          accessibilityRole="image"
          color="surface"
          size="small"
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "natds-icons",
                "fontSize": 16,
              },
            ]
          }
          testID="natds-icon"
        >
          
        </Text>
      </View>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`Checkbox component render should render checkbox selected correctly 1`] = `
<TouchableOpacity
  activeOpacity={1}
  disabled={false}
  onPress={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
    ]
  }
  testID="checkbox"
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "borderRadius": 50,
      }
    }
    testID="touchable-ripple"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        color="primary"
        disabled={false}
        selected={true}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f4ab34",
              "borderColor": "#f4ab34",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            },
          ]
        }
        testID="checkbox-box"
      >
        <Text
          accessibilityRole="image"
          color="surface"
          size="small"
          style={
            Array [
              Object {
                "color": "#ffffff",
                "fontFamily": "natds-icons",
                "fontSize": 16,
              },
            ]
          }
          testID="natds-icon"
        >
          
        </Text>
      </View>
    </View>
  </View>
</TouchableOpacity>
`;
