// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog component Should render a dialog content with divider 1`] = `
<RCTScrollView
  bounces={false}
  style={
    Array [
      Object {
        "flexShrink": 1,
      },
    ]
  }
>
  <View>
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#bbbbbb",
              "height": 1,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "width": "100%",
            },
          ]
        }
        testID="divider"
        type="fullBleed"
      />
    </View>
    <Text
      style={
        Array [
          Object {
            "color": "#333333",
            "fontSize": 14,
            "fontWeight": "400",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      something...
    </Text>
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#bbbbbb",
              "height": 1,
              "marginBottom": 0,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 0,
              "width": "100%",
            },
          ]
        }
        testID="divider"
        type="fullBleed"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`Dialog component Should render a dialog header with title and optional test id 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "color": "#333333",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingBottom": 8,
        "paddingHorizontal": 16,
      },
    ]
  }
  testID="dialog-header"
>
  <Text
    style={
      Array [
        Object {
          "color": "#333333",
          "flexBasis": 0,
          "flexGrow": 0.85,
          "flexShrink": 1,
          "fontSize": 20,
        },
        Object {
          "fontWeight": "bold",
        },
      ]
    }
  >
    something...
  </Text>
  <View
    style={
      Array [
        Object {
          "flexDirection": "row",
          "height": "100%",
        },
      ]
    }
  />
</View>
`;

exports[`Dialog component Should render a dialog passing alignment action 1`] = `
<View
  actionsAlignment="stacked"
  style={
    Array [
      Object {
        "flexDirection": "column",
        "flexWrap": "wrap",
        "justifyContent": "flex-end",
        "paddingHorizontal": 16,
        "paddingTop": 8,
      },
    ]
  }
  testID="dialog-actions"
>
  something...
</View>
`;

exports[`Dialog component Should render a dialog with title, content and actions 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
          "paddingLeft": 16,
          "paddingRight": 16,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#000000",
            "bottom": 0,
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
            "left": 0,
            "opacity": 0.56,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#ffffff",
            "borderRadius": 4,
            "maxHeight": 933.8,
            "paddingVertical": 16,
            "width": "100%",
          },
        ]
      }
      testID="ds-dialog"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#333333",
              "flexBasis": 0,
              "flexGrow": 0.85,
              "flexShrink": 1,
              "fontSize": 20,
            },
            Object {
              "fontWeight": "bold",
            },
          ]
        }
      >
        Title
      </Text>
      <RCTScrollView
        bounces={false}
        style={
          Array [
            Object {
              "flexShrink": 1,
            },
          ]
        }
      >
        <View>
          <Text
            style={
              Array [
                Object {
                  "color": "#333333",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            content
          </Text>
        </View>
      </RCTScrollView>
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "flexWrap": "wrap",
              "justifyContent": "flex-end",
              "paddingHorizontal": 16,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text>
          actions
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Dialog component Should render a new dialog with header, content and actions 1`] = `[Function]`;
